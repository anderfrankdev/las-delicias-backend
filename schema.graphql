type Plate{
    id:ID
    price:Float
    title:String
    images:[String]
    ingridients:[String]
    description:String
    stripe_code:String
    category:String
}

type Order{
    price:Float
    title:String
    images:[String]
    amount:Float
    date:Float
    status:String
}

type User{
    name:String
    email: String
    password: String
    cart:[Plate]
    favourites:[Plate]
    orders:[Order]
}

input UserInput{
    name:String!
    email: String!
    password: String!
}

type LogoutMsg{
    message: String!
}

type Query{
    getOwnData:User
    logout:LogoutMsg
    getPlates:[Plate]
}

input LoginInput{
    email: String!
    password: String!
}

enum Category{
    Italian
    Japanese
    Soup
    Fast
    Seafood
    Meat
    Vegan
    Desserts
    Salads
}

input PlateInput{
    price:Float
    title:String
    images:[String]
    ingridients:[String]
    description:String
    stripe_code:String
    category:Category
}


type Mutation{
    createUser(input:UserInput!):User
    createPlate(input:PlateInput!):Plate
    addTodo(input:[[String]]!):User 
    login(input:LoginInput!):User
}